var searchIndex = {};
searchIndex["color"] = {"doc":"Provides Color definition and operations.","items":[[3,"Color","color","RGBA color. Component values should be in range [0.0, 1.0].",null,null],[12,"r","","",0,null],[12,"g","","",0,null],[12,"b","","",0,null],[12,"a","","",0,null],[18,"BLACK","","",0,null],[18,"WHITE","","",0,null],[18,"RED","","",0,null],[18,"GREEN","","",0,null],[18,"BLUE","","",0,null],[18,"YELLOW","","",0,null],[18,"MAGENTA","","",0,null],[18,"CYAN","","",0,null],[11,"hsv","","Construct Color converting from HSV to RGB. Alpha value will be equal to 1.0.",0,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsva","","Construct Color converting from HSV to RGB and given alpha value.",0,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgb_hex","","Construct Color from RGB hex value.",0,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"argb_hex","","Construct Color from ARGB hex value.",0,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"distance_to","","Calculate distance between colors in RGBA space.",0,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"f32"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"rgb","","Construct Color with given RGB components. Alpha value will be equal to 1.0.",0,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgba","","Construct Color with given RGBA components.",0,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"deref_mut","","",0,null]],"paths":[[3,"Color"]]};
searchIndex["geom"] = {"doc":"Linear algebra and stuff (vectors and matrices).","items":[[3,"Vec2","geom","2-d vector.",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"Vec3","","3-d vector.",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[12,"z","","",1,null],[3,"Vec4","","4-d vector.",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[12,"z","","",2,null],[12,"w","","",2,null],[3,"Mat4","","4x4 matrix",null,null],[3,"Rect","","A rect with sides parralel to x and y axis.",null,null],[12,"bottom_left","","",3,null],[12,"top_right","","",3,null],[5,"vec2","","Construct a 2-d vector with given components.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"vec2"}}],[5,"vec3","","Construct a 3-d vector with given components.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"vec3"}}],[5,"vec4","","Construct a 4-d vector with given components.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"vec4"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"from","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"extend","","Extend into a 3-d vector.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"vec3"}}],[11,"dot","","Calculate dot product of two vectors.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"t"}}],[11,"skew","","Calculate skew product of two vectors.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"t"}}],[11,"normalize","","Normalize a vector.",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"len","","Calculate length of a vector.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"rotated","","Rotate a vector by a given angle.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"vec3"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"from","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"vec4"}}],[11,"dot","","Calculate dot product of two vectors.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"t"}}],[11,"cross","","Calculate cross product of two vectors.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"normalize","","Normalize a vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"len","","Calculate length of a vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vec4"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"from","","",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"dot","","Calculate dot product of two vectors.",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"t"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"neg","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"neg","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"div_assign","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"neg","","",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"transpose","","Get transposed matrix.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse","","Get inverse matrix.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"neg","","",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"mul_assign","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"mul_assign","","",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div","","",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"div_assign","","",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"perspective","","Construct prespective projection matrix.",4,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"self"}}],[11,"frustum","","Construct frustum projection matrix.",4,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"self"}}],[11,"scale_uniform","","Construct a uniform scale matrix.",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"scale","","Construct a scale matrix.",4,{"inputs":[{"name":"vec3"}],"output":{"name":"self"}}],[11,"translate","","Construct a translation matrix.",4,{"inputs":[{"name":"vec3"}],"output":{"name":"self"}}],[11,"rotate_x","","Construct matrix rotating around x axis.",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"rotate_y","","Construct matrix rotating around y axis.",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"rotate_z","","Construct matrix rotating around z axis.",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"mat4"}}],[11,"new","","Construct a matrix.",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"zero","","Construct zero matrix.",4,{"inputs":[],"output":{"name":"self"}}],[11,"identity","","Construct identity matrix.",4,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"from_corners","","Construct a rect from corner points.",3,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"self"}}],[11,"width","","Get rect's width.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"height","","Get rect's height.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"size","","Get rect's size.",3,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"contains","","Check if a point is inside the rect.",3,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"bool"}}]],"paths":[[3,"Vec2"],[3,"Vec3"],[3,"Vec4"],[3,"Rect"],[3,"Mat4"]]};
searchIndex["prelude"] = {"doc":"Prelude is designed to be imported with `use prelude::*`.","items":[[3,"CustomRange","prelude","",null,null],[3,"ACell","","Atomic cell. Just like Cell, but thread-safe.",null,null],[5,"min_max","","Sort two values.",null,null],[5,"min","","Get minimum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Get maximum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"get_slice","","",null,null],[5,"default","","Shortcut for Default::default.",null,{"inputs":[],"output":{"name":"t"}}],[11,"start","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",0,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct new cell with given value.",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"get","","Get current value from the cell.",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"set","","Change cell's value.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[8,"RangeArgument","","Temporary re-implemenation of RangeArgument from stdlib while waiting for it to become stable",null,null],[10,"start","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"end","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"StableFnOnce","","",null,null],[16,"Output","","",3,null],[10,"call_once","","",3,null],[8,"StableFnMut","","",null,null],[10,"call_mut","","",4,null],[8,"StableFn","","",null,null],[10,"call","","",5,null]],"paths":[[3,"CustomRange"],[3,"ACell"],[8,"RangeArgument"],[8,"StableFnOnce"],[8,"StableFnMut"],[8,"StableFn"]]};
searchIndex["rng"] = {"doc":"Random number generation.","items":[[5,"gen","rng","Generate a random value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"gen_range","","Generate a random value from a given range.",null,{"inputs":[{"name":"range"}],"output":{"name":"t"}}],[5,"shuffle","","Randomly shuffle an array.",null,null],[5,"choose","","Choose a random element from an array.",null,null]],"paths":[]};
searchIndex["timer"] = {"doc":"Timer.","items":[[3,"Timer","timer","Timer can be used to track time since some instant.",null,null],[11,"new","","Constructs a new timer.",0,{"inputs":[],"output":{"name":"self"}}],[11,"elapsed","","Get time elapsed (in seconds) since last reset.",0,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"tick","","Reset, and get time elapsed (in seconds) since last reset.",0,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}]],"paths":[[3,"Timer"]]};
initSearch(searchIndex);
